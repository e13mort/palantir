-- type in WHERE clause is com.e13mort.palantir.model.MergeRequestEvent.Type enum's ordinal
CREATE VIEW IF NOT EXISTS mr_interaction AS
SELECT mrs.*, mn.*, users.*, (first_interaction_time_millis - mrs.created_time) AS create_to_first_interaction_time_diff FROM merge_requests AS mrs
    LEFT OUTER JOIN (SELECT MIN(created_time_millis) AS first_interaction_time_millis, mr_id, user_id FROM mr_notes WHERE type = 0 OR type = 1 GROUP BY mr_id) mn
        ON mn.mr_id = mrs.id
    LEFT OUTER JOIN users ON users.id = mn.user_id
    ORDER BY create_to_first_interaction_time_diff;

mrsWithountApproves:
SELECT * FROM mr_interaction WHERE create_to_first_interaction_time_diff IS NULL;

mrsWithApproves:
SELECT * FROM mr_interaction WHERE create_to_first_interaction_time_diff IS NOT NULL;

firstApprovesStatistics:
SELECT mr_id, user_id, username, name, COUNT(user_id) AS count, STRFTIME('%Y-%W', created_time / 1000, 'unixepoch') AS period
FROM mr_interaction
WHERE first_interaction_time_millis IS NOT NULL AND project_id = ?
GROUP BY STRFTIME('%Y-%W', created_time / 1000, 'unixepoch'), user_id
ORDER BY period DESC, count DESC;

-- this function can't be compiled because of the issue
-- https://github.com/cashapp/sqldelight/issues/1206
-- getPercentiles:
-- SELECT max(time_diff / 1000) AS seconds, (rank * 100) AS percentile
-- FROM (
--          SELECT time_diff,
--                 ROUND(percent_rank() OVER (ORDER BY time_diff), 1) AS rank
--          FROM mr_interaction
--          WHERE time_diff IS NOT NULL
--      )
-- GROUP BY RANK;